그리디 알고리즘이란 매 순간마다 최적의 선택을 하여 정해진 목표까지 계산해 나가는 것이다. 
얼핏보면 동적계획법과 비슷하지만 DP는 가능한 모든 경우를 저장하여 계산하는 것이고, 
탐욕 알고리즘은 순간순간 최적의 경우만 저장하여 최적의 수로만 진행하는 것이다.

그리디 알고리즘은 동적 프로그래밍 사용 시 지나치게 많은 일을 한다는 것에서 착안하여 고안된 알고리즘입니다. 
동적 프로그래밍을 대체하는 것은 아니고 같이 쓰이며 서로 보완하는 개념입니다.

그리디 알고리즘은 탐욕 알고리즘 또는 욕심쟁이 알고리즘이라고도 불리는데요. 
미래를 생각하지 않고 각 단계에서 가장 최선의 선택을 하는 기법입니다. 
이렇게 각 단계에서 최선의 선택을 한 것이 전체적으로도 최선이길 바라는 알고리즘이죠.

물론 모든 경우에서 그리디 알고리즘이 통하지는 않습니다. 
쉬운 예를 들자면 지금 선택하면 1개의 마시멜로를 받고, 
1분 기다렸다 선택하면 2개의 마시멜로를 받는 문제에서는, 
그리디 알고리즘을 사용하면 항상 마시멜로를 1개밖에 받지 못합니다. 
지금 당장 최선의 선택은 마시멜로 1개를 받는 거지만, 
결과적으로는 1분 기다렸다가 2개 받는 게 최선이기 때문이죠.
