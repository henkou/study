* 생성자의 초기화 리스트
생성자 이름 뒤에 오는 것을 초기화 리스트라고 한다. 생성자 호출과 동시에 멤버 변수들을 초기화 시켜주는 역할을 한다.
초기화를 하는 이유 : 생성자가 길어지는 걸 줄일 수 있다. 멤버변수를 효율적으로 초기화 할 수 있다.
A(int a, int b) : m_a(a), m_b(b) - : 을 적고 뒤에 처럼 적어준다.
ex) int a = 10; 와 int a; a = 10; 을 보면 첫번째는 바로 생성과 초기화를 동시에 하고 두번째는 생성 후 초기화를 진행한다.
다소 작업속도(?)가 느려질 수 있다. 
그리고 샏성과 초기화를 동시에 해야 하는 것들이 있는데 총 4가지의 경우가 있다. 
레퍼런스 멤버 변수 초기화와 상수멤버 변수 초기화 그리고 포함된 객체의 초기화 마지막으로는 상속받은 멤버 변수를 초기화 할 때가 있다.


* static 변수
마치 전역 변수 같지만 클래스 하나에만 종속되는 변수. 바로 static 멤버 변수.
멤버 변수들처럼 객체가 소멸될 때 소멸되는 것이 아니라 프로그램이 종료 되었을 때 소멸된다.
클래스의 모든 객체들이 '공유' 하는 변수로 모든 객체들이 '하나의' static 멤버 변수를 사용하게 된다.
(클래스)::(static 함수) 형식으로 호출

* this
이는 객체 자신을 가리키는 포인터의 역할을 한다. 즉, 이 멤버 함수를 호출하는 객체 자신을 가리킨다.
간단히 하자면 객체와 함수는 같은 공간에 있는 것이 아니고 함수에서는 안보이게 객체의 주소를 메개 변수로 받아 놓았기 때문에 객체가 어디에 
속해 있는지 알 수 있는 것이다라고 이해. 나중가면 더 중요함.

* 래퍼런스를 리턴하는 함수
* const 함수

