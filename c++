1. 참조자, reference
1-1 포인터와 참조자의 차이

포인터란?
메모리의 주소를 가지고 있는 변수이다. 메모리 값을 보관하는 변수.
주소 값을 통한 메모리 접근을 한다.(간접 참조)

레퍼런스란?
레퍼런스 = 참조자 (C++에만 있는 문법)
자신이 참조하는 변수를 대신할 수 있는 또 하나의 이름이다.
즉, 변수에 별명(별칭)을 하나 붙여 주는 것이다.
변수 명을 통해서 메모리를 참조한다(직접 참조)

포인터    =  메모리 주소 변경가능 =>  참조할 주소 이동가능 => 운영체제에 돌아가는 모든 메모리를 제어가능 
레펀런스 =  메모리 주소 변경불가 => 참조할 주소 이동불가 =>  해당프로그램 안에서 정해진 이름으로만 사용가능

차이점.

1. null 초기화
포인터는 NULL 초기화를 할 수 있지만, 레퍼런스는 NULL 초기화를 할 수 없다.
레퍼런스는 반드시 선언과 동시에 초기화를 해야 한다.
2. 메모리 공간의 소모
포인터는 주소 값을 저장하기 위해 별도의 메모리 공간을 소모한다.
레퍼런스는 같은 메모리 공간을 참조하므로 메모리 공간을 소모하지 않는다.
--> 질문. 
레퍼런스가 메모리 상에 반드시 존재해야 하는 경우는 어떤 경우가 있을까요? 
그리고 메모리 상에 존재할 필요가 없는 경우는 또 어떤 경우가 있을까요?
--> 답변.

3. call by pointer / call by reference
매개 변수로 함수 인자 전달 시, 메모리 소모가 일어나고, 값 복사가 발생된다.
메모리 소모가 없고, 값 복사 또한 발생하지 않는다.
